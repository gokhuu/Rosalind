# my solution
sequence = "CATCACTCCGTGGTGTTTTTAGAGCGCGAGCGGCCTTCGATTCTTGTTATAAAGCGTCTGTAGACACCCGAAGCATCAATTAGTCCACTTCGCTACGTACTTGACGCCCGCCTAGGAGGCCCGGACCTGTATTTTAAGGAATATAATCAATATAACGGCGGGCCTACACTCGTATCAAGAGCGGAACCGGTAACGTCTGAGAACGGGTATGCCTCAGAGTGAATTGTGGTAGTGGAAGGAGCTATTTCGTCCTCGACTGGGTAACCAGGGAAATTGTATGTAGCCTGTAGACCCATGCACGACGGCCAGCAATTCACTCTAACTAGCCGGGTATACACGCCGTACGGACTCTGGGAATATACACTAAGCATTAAGGAGTCTGCACGCGTTGCCAATGGATTCGTGCACAGGCAAAGACTATGCTACAACCTACCGCCAGGAACATGGGTTGTAAAGGTACTGCTCCATGCCACCTCCGGGATTCTCTGAGATTGGAGATGTGACCCGGGTGAATGGGTGGTCCCGATGGCCTCCCCTAACAACCGTCAGGCCTAATCTATCGCACGGCTTGTGCAATCAAGTAAAACGCAGCTCATCTTTGCCTGCGTTGGTGACTGATGTATCGAGGTATGGATAAACAGAGCGTCGGACATTTTCTGTCGATTTGTCGCTCCAGGCTACCTGAAGACAAATACTCTTAATTGGCCGAAAACAGTTAGGGGATTGATACGGCGTGACCGGCGTTGTCTCATAGCTACGGAATACAATTGGGCGACCTTCTTTATCATCCGATACCTGGCTCAGCATAAGTATA"


def printCompliment(sequence):
    rev_seq = sequence[::-1]
    comp_seq = []
    for i in range(len(rev_seq)):
        if rev_seq[i] == 'T':
            comp_seq.append('A')
        elif rev_seq[i] == 'A':
            comp_seq.append('T')
        elif rev_seq[i] == 'C':
            comp_seq.append('G')
        elif rev_seq[i] == 'G':
            comp_seq.append('C')
    comp_seq = ''.join(comp_seq)
    return comp_seq


print(printCompliment(sequence))


# pythonic solution
st = "AAAACCCGGT"
st = st.replace('A', 't').replace('T', 'a').replace('C', 'g').replace('G', 'c').upper()[::-1]
print(st)
